"use strict";var M=Object.defineProperty;var I=Object.getOwnPropertyDescriptor;var U=Object.getOwnPropertyNames;var T=Object.prototype.hasOwnProperty;var _=(t,r)=>{for(var a in r)M(t,a,{get:r[a],enumerable:!0})},H=(t,r,a,l)=>{if(r&&typeof r=="object"||typeof r=="function")for(let e of U(r))!T.call(t,e)&&e!==a&&M(t,e,{get:()=>r[e],enumerable:!(l=I(r,e))||l.enumerable});return t};var V=t=>H(M({},"__esModule",{value:!0}),t);var re={};_(re,{NuniqDictionary:()=>D,RandomSeed:()=>C,nuniq:()=>ee,nuniqor:()=>te});module.exports=V(re);var Y=["shafin","arif","faisal","rahim","alak","arjun","rohan","vikram","sachin","anil","rahul","suresh","amit","vijay","john","peter","michael","david","paul","mark","james","robert","thomas","jun","minho","taeyang","hyun","jong","seok","young","woo","jae","hwan","li","hiroshi","kenji","sanjay","daniel","george"],Z=["ahmed","khan","hossain","rahman","sharma","verma","gupta","iyer","patel","nair","reddy","singh","mishra","sen","smith","johnson","brown","williams","jones","miller","davis","wilson","kim","lee","park","choi","jung","cho","kang","yun","jang","lim","tanaka","sato","chang","chen","wang","fernandez","garcia"],B=["uswa","hena","tahmina","zimi","laila","aisha","priya","sita","radha","lakshmi","divya","manisha","rekha","anjali","mary","susan","linda","sarah","jennifer","elizabeth","anna","grace","alice","jiyeon","eunji","soyoung","yuna","minji","hyeri","seoyeon","jiyoung","chae","mei","yuki","hana","rosie","sofia","isabella"],G=["ahmed","aktar","sultana","begum","khatun","sharma","verma","gupta","iyer","patel","nair","rani","bose","kapoor","smith","johnson","brown","williams","jones","miller","taylor","anderson","kim","lee","park","choi","jung","cho","kang","lim","jang","seo","tanaka","sato","chen","li","gonzalez","fernandez","rodriguez","morales"],J=["big","small","quick","lazy","bright","happy","sad","angry","brave","calm","clever","kind","cold","hot","loud","quiet","soft","hard","rough","smooth","fast","slow","young","old","strong","weak","tall","short","rich","poor","long","short","heavy","light","dark","pale","deep","shallow","clean","dirty","wet","dry","sweet","sour","bitter","salty","tasty","bland","fresh","stale","new","old","good","bad","nice","mean","polite","rude","friendly","unfriendly","honest","dishonest","careful","careless","lucky","unlucky","beautiful","ugly","handsome","pretty","plain","fancy","simple","complex","easy","difficult","funny","serious","creative","boring","expensive","cheap","important","unimportant","useful","useless","happy","sad","healthy","sick","strong","weak","brave","cowardly","fierce","gentle","famous","unknown","popular","unpopular","safe","dangerous","busy","lazy","organized","messy","confident","nervous","optimistic","pessimistic","curious","indifferent","jealous","proud","shy","outgoing","brilliant","dull","colorful","bland","helpful","useless","bright","dim","cheerful","gloomy","graceful","clumsy","flexible","stiff","humble","arrogant","patient","impatient","reliable","unreliable","faithful","unfaithful","generous","selfish","thoughtful","thoughtless","adventurous","cautious","brave","cowardly","energetic","tired","enthusiastic","apathetic","open-minded","narrow-minded","wise","foolish","intelligent","stupid","sensitive","insensitive","talented","clumsy","loyal","disloyal","trustworthy","untrustworthy","ambitious","lazy","charismatic","dull","spontaneous","predictable","creative","unimaginative","humorous","serious","tolerant","intolerant","considerate","inconsiderate"],K=["red","blue","green","yellow","orange","purple","pink","brown","black","white","gray","beige","cyan","magenta","indigo","violet","teal","maroon","lavender","olive","peach","navy","gold","silver","bronze","aqua","fuchsia","lime","coral","plum","ivory","mint","rose","jade","amber","tan","charcoal","khaki","mustard","periwinkle","turquoise","salmon","sapphire","ruby","emerald","topaz","cerulean","chartreuse","taupe","crimson","scarlet","orchid","pearl","blush","denim","mulberry","cobalt","mocha","sand","apricot","cherry","pearl"],Q=["donkey","dog","cat","lion","tiger","elephant","giraffe","zebra","bear","wolf","fox","deer","mouse","rat","horse","sheep","goat","cow","pig","rabbit","squirrel","moose","elk","antelope","buffalo","leopard","cheetah","panther","jaguar","cougar","hyena","rhino","hippo","kangaroo","koala","platypus","ostrich","penguin","dolphin","whale","shark","octopus","squid","crab","lobster","eel","seal","otter","beaver","bat","owl","eagle","hawk","falcon","sparrow","crow","raven","pigeon","parrot","peacock","swan","goose","duck","turkey","chicken","rooster","hen","frog","toad","snake","lizard","iguana","tortoise","turtle","crocodile","alligator","cobra","python","vulture","flamingo","lemur","meerkat","chimpanzee","gorilla","orangutan","baboon","bison","chameleon","armadillo","porcupine","hedgehog","badger","mongoose","walrus","jellyfish","starfish","clam","oyster","shrimp","prawn","moth","butterfly","beetle","ant","bee","wasp","hornet","grasshopper","cricket","locust","mantis","dragonfly","ladybug","termite","slug","snail","worm"],X=["0","1","2","3","4","5","6","7","8","9"],O="abcdefghijklmnopqrstuvwxyz".split(""),D={MaleFirstNames:Y,MaleSurnames:Z,FemaleFirstNames:B,FemaleSurnames:G,Adjectives:J,Colors:K,Animals:Q,Digits:X,Alphabets:O};var q=t=>{let{keys:r={},dictionaries:a=[],seed:l}=t,e=l?C(l):Math.random,{fullName:b="",email:s="",withUnderscore:n=!0,length:d=12}=r,c=b.split(" ")[0].toLowerCase().replace(/\s+/g,"_"),p=s.split("@")[0].toLowerCase().replace(/[aeiou]/gi,"").split("").sort(()=>e()-.5).join("").slice(0,4),h=new Date,k=`${h.getFullYear()}${String(h.getMonth()+1).padStart(2,"0")}${String(h.getDate()).padStart(2,"0")}`.split("").sort(()=>e()-.5).join("").slice(0,4),j=`${p}${k}`;if(a.length>0){let u=a.filter(f=>f&&f.length>0);if(u.length>0){let f=Math.floor(e()*u.length),v=u[f];v.length>0?j=`${v.slice(0,2).join("_")}_${j}`:console.warn("Random dictionary is empty:",v)}else console.warn("No valid dictionaries provided:",a)}if(n){let u=j.split(""),f=2,v=0;for(let x=0;x<u.length;x++)e()>.5&&v<f&&(u.splice(x,0,"_"),v++);j=u.join("")}let i=`${c}${j}`.toLowerCase().replace(/[^a-z0-9_]/g,"");if(i.length>d)i=i.slice(0,d);else if(i.length<d)for(;i.length<d;)i+=e().toString(36).substr(2,d-i.length);return i};var L=t=>{let{Adjectives:r,Colors:a,Animals:l,Digits:e,Alphabets:b,MaleFirstNames:s,FemaleFirstNames:n}=D,{keys:d={},dictionaries:c=[],seed:S}=t,{wordLength:m=3,separator:p=" ",caseStyle:h="",stringSaltLength:w=0,numberSaltLength:k=0,alphaNumericSaltLength:j=0}=d,i=S?C(S):Math.random,u=(c==null?void 0:c.length)>0?c:[r,a,l,e,b,s,n],f=o=>o[Math.floor(i()*(o==null?void 0:o.length))],v=(o,g)=>{let y="abcdefghijklmnopqrstuvwxyz".split("");return Array.from({length:o},()=>y[Math.floor(g()*y.length)]).join("")},x=(o,g)=>{let y="0123456789".split("");return Array.from({length:o},()=>y[Math.floor(g()*y.length)]).join("")},P=(o,g)=>{let y="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789".split("");return Array.from({length:o},()=>y[Math.floor(g()*y.length)]).join("")},F=o=>{switch(h){case"capital":return o.split(p).map(g=>g.charAt(0).toUpperCase()+g.slice(1).toLowerCase()).join(p);case"uppercase":return o.toUpperCase();case"lowercase":return o.toLowerCase();default:return o}},W=()=>{try{let o=Array.from({length:m},()=>{let $=f(u);return f($)}).join(p),g=[];w>0&&g.push(v(w,i)),k>0&&g.push(x(k,i)),j>0&&g.push(P(j,i));let y=g.map($=>F($));if(y.length>0){let $=o.split(p),N=Math.floor(i()*($.length+1));y.forEach(E=>{$.splice(N,0,E),N=Math.floor(i()*($.length+1))}),o=$.join(p)}return typeof o=="string"?F(o):""}catch{return""}},z="";for(;!z;)z=W();return z};var R=t=>{let{keys:r={},dictionaries:a=[],seed:l}=t,{content:e="",author:b="guest",contentLength:s=64,separator:n="-"}=r,c=`${e.length>s?e.slice(0,s):e}${n}by${n}${b}`.toLowerCase().replace(/[^a-z0-9-_]/g,n).replace(new RegExp(`${n}+`,"g"),n).replace(new RegExp(`^${n}+|${n}+$`,"g"),""),S=l?C(l):Math.random;if(a.length>0){let k=[],j=Math.min(Math.floor(S()*9)+1,a.length);for(let i=0;i<j;i++){let u=a[i];if(u&&u.length>0){let f=Math.floor(S()*u.length);k.push(u[f])}}c=`${k.join(n)}${n}${c}`}let m=new Date,p=`${String(m.getDate()).padStart(2,"0")}-${String(m.getMonth()+1).padStart(2,"0")}-${m.getFullYear()}-${String(m.getHours()).padStart(2,"0")}-${String(m.getMinutes()).padStart(2,"0")}-${String(m.getSeconds()).padStart(2,"0")}`,h="bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ0123456789",w="";for(let k=0;k<16;k++)w+=h[Math.floor(S()*h.length)];return`${c}${n}${p}${n}${w}`};var A={username:q,name:L,slug:R};function ee(t,r){let a={};typeof t=="number"?a={length:t}:typeof r=="number"?a={...t,length:r}:t&&(a={...t,...r||{}});let{fn:l}=a,e=l&&A[l];if(e)return e(a);let b=n=>{let d="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789",c="",S=new Date().toISOString().replace(/[^0-9]/g,""),m=`${Math.random()}${S}${n}`;for(let p=0;p<n;p++){let h=0;for(let w=0;w<m.length;w++)h=(h<<5)-h+m.charCodeAt(w),h|=0;c+=d[Math.abs(h)%d.length],m=c}return c},s=a.length||12;return b(s)}function te(t,r){typeof t=="string"&&typeof r=="function"?A[t]=r:console.error("Invalid name or generator function provided to nuniqor")}function C(t){let r=typeof t=="number"?t.toString():t.replace(/[^a-zA-Z0-9]/g,"");function a(b){let s=2166136261;for(let n=0;n<b.length;n++)s^=b.charCodeAt(n),s+=(s<<1)+(s<<4)+(s<<7)+(s<<8)+(s<<24);return s>>>0}let e=a(r);return()=>(e^=e<<13,e^=e>>17,e^=e<<5,(e>>>0)/4294967295)}0&&(module.exports={NuniqDictionary,RandomSeed,nuniq,nuniqor});
